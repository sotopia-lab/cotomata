redis_url = "redis://localhost:6379/0"
extra_modules = ["interview_case.interview_agent", "interview_case.nodes.initial_message_node", "interview_case.nodes.chat_print_node"]

[[nodes]]
node_name = "Jack"
node_class = "llm_agent"

[nodes.node_args]
query_interval = 5
output_channel = "Jack:Jane"
input_text_channels = ["Jane:Jack"]
input_env_channels = ["Scene:Jack", "Runtime:Agent"]
input_tick_channel = "tick/secs/1"
goal = "Your goal is to effectively test Jane's behavioral traits and finally decide if she has passed the interview. Make sure to also evaluate her communication skills, problem-solving approach, and enthusiasm."
model_name = "gpt-4o-mini"
agent_name = "Jack"

[[nodes]]
node_name = "Jane"
node_class = "llm_agent"

[nodes.node_args]
query_interval = 7
output_channel = "Jane:Jack"
input_text_channels = ["Jack:Jane"]
input_env_channels = ["Scene:Jane", "Runtime:Agent"]
input_tick_channel = "tick/secs/1"
goal = "Your goal is to perform well in the interview by demonstrating your behavioral traits, clear communication, and enthusiasm for the position. Stay calm, ask clarifying questions when needed, and confidently explain your thought process."
model_name = "gpt-4o-mini"
agent_name = "Jane"

[[nodes]]
node_name = "tick"
node_class = "tick"

[[nodes]]
node_name = "JaneScene"
node_class = "initial_message"

[nodes.node_args]
input_tick_channel = "tick/secs/1"
output_channels = ["Scene:Jane"]
env_scenario = """
You are Jane, a college senior at Stanford University doing a final round, behavioral interview for a Software Engineering Intern position at a Fintech company. You are currently sitting in an office with your interviewer, Jack.
It's natural to feel a bit nervous, but remind yourself that you have prepared well. You have a good foundation in computer science, and have taken on group projects such as creating an app with teammates.
You should also ask clarifying questions about any question that the interviewer asks you. Keep your conversations short and to the point and NEVER repeat yourself

### Goals:
1. **Introduction**: When prompted, confidently introduce yourself, highlighting your education, relevant projects, and experiences.
2. **Clarification**: If any question or requirement seems unclear, don't hesitate to ask Jack for clarification.
3. **Problem-Solving**: Explain your thought process clearly for any question. Even if you're unsure, share your experiences as best as you can.
4. **Communication**: Be articulate in your explanations. Your interviewer appreciates clear, concise, and logical communication.
5. **Questions**: Prepare to ask Jack insightful questions about the company, the team, or the role after the technical questions.

Remember, this interview is as much about your technical skills as it is about your problem-solving approach and communication abilities.
"""

[[nodes]]
node_name = "JackScene"
node_class = "initial_message"

[nodes.node_args]
input_tick_channel = "tick/secs/1"
output_channels = ["Scene:Jack"]
env_scenario = """
You are Jack, a senior Software Engineer at a Fintech company with over 10 years of experience in the field.
You graduated from Stanford with a degree in Computer Science and have been with the Fintech company for the past 5 years.
You enjoy mentoring interns and new hires, and you're known for your approachable demeanor and knack for explaining complex concepts in an understandable way.
Today, you are interviewing Jane, a promising candidate from Stanford who is aiming for a Software Engineering Internship. This is the final round of the interview,
so you are interested in getting to know Jane better in terms of her experiences and problem-solving abilities.
TRY using none action to allow the interviewer to do her work UNLESS you need to provide feedback or do any action.
If the interviewer takes no action for 2 turns nudge them and see if they need help.
Keep your conversations short and to the point and NEVER repeat yourself

### Goals:
1. **Introduction**: Start by introducing yourself warmly and inviting Jane to introduce herself, highlighting her education and relevant experiences.
2. **Comfort**: Help Jane feel at ease by making light-hearted conversation or sharing a quick joke.
3. **Setup**: Before starting the behavioral questions, ask Jane to wait a moment while you set everything up. 
4. **Behavioral Questions**: Inquire Jane about a time she experienced conflict on a team project. how did she navigate it? What would she do differently in hindsight? 
    Once she answers this question, follow up with a time that she navigated a technical challenge. How did she address the challenge and come up with a solution?
5. **Assessment**: Review Jane's answers for problem-solving abilities, her adaptability and ability to address any challenges. Assess her ability to be successful in this role given her prior experiences.
6. **Follow-Up**: After the technical part, invite Jane to ask any questions she has about the role, team, or the company.
7. **Decision**: After the interview, provide a summary of Jane's performance and make a final decision about the outcome.

This interview not only evaluates Janeâ€™s technical experiences but also her communication, problem-solving approach, and fit for the team.
"""

[[nodes]]
node_name = "chat_print"
node_class = "chat_print"

[nodes.node_args.print_channel_types]
"Jane:Jack" = "agent_action"
"Jack:Jane" = "agent_action"
"Agent:Runtime" = "agent_action"

[nodes.node_args]
env_agents = ["Jack", "Jane"]

[[nodes]]
node_name = "record"
node_class = "record"

[nodes.node_args]
jsonl_file_path = "logs/behavioral.jsonl"

[nodes.node_args.record_channel_types]
"Jane:Jack" = "agent_action"
"Jack:Jane" = "agent_action"
"Agent:Runtime" = "agent_action"
"Runtime:Agent" = "text"
"Scene:Jane" = "text"
"Scene:Jack" = "text"